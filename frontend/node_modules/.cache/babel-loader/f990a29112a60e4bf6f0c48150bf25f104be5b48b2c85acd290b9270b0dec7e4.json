{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport useLockEffect from \"./useLockEffect\";\n/**\r\n * When user first focus one input, any submit will trigger focus another one.\r\n * When second time focus one input, submit will not trigger focus again.\r\n * When click outside to close the panel, trigger event if it can trigger onChange.\r\n */\nexport default function useRangeActive(disabled) {\n  var empty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var mergedOpen = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    activeIndex = _React$useState2[0],\n    setActiveIndex = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    focused = _React$useState4[0],\n    setFocused = _React$useState4[1];\n  var activeListRef = React.useRef([]);\n  var lastOperationRef = React.useRef(null);\n  var triggerFocus = function triggerFocus(nextFocus) {\n    setFocused(nextFocus);\n  };\n\n  // ============================= Record =============================\n  var lastOperation = function lastOperation(type) {\n    if (type) {\n      lastOperationRef.current = type;\n    }\n    return lastOperationRef.current;\n  };\n\n  // ============================ Strategy ============================\n  // Trigger when input enter or input blur or panel close\n  var nextActiveIndex = function nextActiveIndex(nextValue) {\n    var list = activeListRef.current;\n    var filledActiveSet = new Set(list.filter(function (index) {\n      return nextValue[index] || empty[index];\n    }));\n    var nextIndex = list[list.length - 1] === 0 ? 1 : 0;\n    if (filledActiveSet.size >= 2 || disabled[nextIndex]) {\n      return null;\n    }\n    return nextIndex;\n  };\n\n  // ============================= Effect =============================\n  // Wait in case it's from the click outside to blur\n  useLockEffect(focused || mergedOpen, function () {\n    if (!focused) {\n      activeListRef.current = [];\n    }\n  });\n  React.useEffect(function () {\n    if (focused) {\n      activeListRef.current.push(activeIndex);\n    }\n  }, [focused, activeIndex]);\n  return [focused, triggerFocus, lastOperation, activeIndex, setActiveIndex, nextActiveIndex, activeListRef.current];\n}","map":{"version":3,"names":["_slicedToArray","React","useLockEffect","useRangeActive","disabled","empty","arguments","length","undefined","mergedOpen","_React$useState","useState","_React$useState2","activeIndex","setActiveIndex","_React$useState3","_React$useState4","focused","setFocused","activeListRef","useRef","lastOperationRef","triggerFocus","nextFocus","lastOperation","type","current","nextActiveIndex","nextValue","list","filledActiveSet","Set","filter","index","nextIndex","size","useEffect","push"],"sources":["D:/Final/frontend/node_modules/rc-picker/es/PickerInput/hooks/useRangeActive.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\r\nimport * as React from 'react';\r\nimport useLockEffect from \"./useLockEffect\";\r\n/**\r\n * When user first focus one input, any submit will trigger focus another one.\r\n * When second time focus one input, submit will not trigger focus again.\r\n * When click outside to close the panel, trigger event if it can trigger onChange.\r\n */\r\nexport default function useRangeActive(disabled) {\r\n  var empty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\r\n  var mergedOpen = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n  var _React$useState = React.useState(0),\r\n    _React$useState2 = _slicedToArray(_React$useState, 2),\r\n    activeIndex = _React$useState2[0],\r\n    setActiveIndex = _React$useState2[1];\r\n  var _React$useState3 = React.useState(false),\r\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\r\n    focused = _React$useState4[0],\r\n    setFocused = _React$useState4[1];\r\n  var activeListRef = React.useRef([]);\r\n  var lastOperationRef = React.useRef(null);\r\n  var triggerFocus = function triggerFocus(nextFocus) {\r\n    setFocused(nextFocus);\r\n  };\r\n\r\n  // ============================= Record =============================\r\n  var lastOperation = function lastOperation(type) {\r\n    if (type) {\r\n      lastOperationRef.current = type;\r\n    }\r\n    return lastOperationRef.current;\r\n  };\r\n\r\n  // ============================ Strategy ============================\r\n  // Trigger when input enter or input blur or panel close\r\n  var nextActiveIndex = function nextActiveIndex(nextValue) {\r\n    var list = activeListRef.current;\r\n    var filledActiveSet = new Set(list.filter(function (index) {\r\n      return nextValue[index] || empty[index];\r\n    }));\r\n    var nextIndex = list[list.length - 1] === 0 ? 1 : 0;\r\n    if (filledActiveSet.size >= 2 || disabled[nextIndex]) {\r\n      return null;\r\n    }\r\n    return nextIndex;\r\n  };\r\n\r\n  // ============================= Effect =============================\r\n  // Wait in case it's from the click outside to blur\r\n  useLockEffect(focused || mergedOpen, function () {\r\n    if (!focused) {\r\n      activeListRef.current = [];\r\n    }\r\n  });\r\n  React.useEffect(function () {\r\n    if (focused) {\r\n      activeListRef.current.push(activeIndex);\r\n    }\r\n  }, [focused, activeIndex]);\r\n  return [focused, triggerFocus, lastOperation, activeIndex, setActiveIndex, nextActiveIndex, activeListRef.current];\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}