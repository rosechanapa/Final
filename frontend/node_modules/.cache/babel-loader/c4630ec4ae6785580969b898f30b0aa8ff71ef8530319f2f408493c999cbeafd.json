{"ast":null,"code":"\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport QuestionCircleOutlined from \"@ant-design/icons/es/icons/QuestionCircleOutlined\";\nimport classNames from 'classnames';\nimport Col from '../grid/col';\nimport { useLocale } from '../locale';\nimport defaultLocale from '../locale/en_US';\nimport Tooltip from '../tooltip';\nimport { FormContext } from './context';\nfunction toTooltipProps(tooltip) {\n  if (!tooltip) {\n    return null;\n  }\n  if (typeof tooltip === 'object' && ! /*#__PURE__*/React.isValidElement(tooltip)) {\n    return tooltip;\n  }\n  return {\n    title: tooltip\n  };\n}\nconst FormItemLabel = _ref => {\n  let {\n    prefixCls,\n    label,\n    htmlFor,\n    labelCol,\n    labelAlign,\n    colon,\n    required,\n    requiredMark,\n    tooltip,\n    vertical\n  } = _ref;\n  var _a;\n  const [formLocale] = useLocale('Form');\n  const {\n    labelAlign: contextLabelAlign,\n    labelCol: contextLabelCol,\n    labelWrap,\n    colon: contextColon\n  } = React.useContext(FormContext);\n  if (!label) {\n    return null;\n  }\n  const mergedLabelCol = labelCol || contextLabelCol || {};\n  const mergedLabelAlign = labelAlign || contextLabelAlign;\n  const labelClsBasic = `${prefixCls}-item-label`;\n  const labelColClassName = classNames(labelClsBasic, mergedLabelAlign === 'left' && `${labelClsBasic}-left`, mergedLabelCol.className, {\n    [`${labelClsBasic}-wrap`]: !!labelWrap\n  });\n  let labelChildren = label;\n  // Keep label is original where there should have no colon\n  const computedColon = colon === true || contextColon !== false && colon !== false;\n  const haveColon = computedColon && !vertical;\n  // Remove duplicated user input colon\n  if (haveColon && typeof label === 'string' && label.trim()) {\n    labelChildren = label.replace(/[:|：]\\s*$/, '');\n  }\n  // Tooltip\n  const tooltipProps = toTooltipProps(tooltip);\n  if (tooltipProps) {\n    const {\n        icon = /*#__PURE__*/React.createElement(QuestionCircleOutlined, null)\n      } = tooltipProps,\n      restTooltipProps = __rest(tooltipProps, [\"icon\"]);\n    const tooltipNode = /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, restTooltipProps), /*#__PURE__*/React.cloneElement(icon, {\n      className: `${prefixCls}-item-tooltip`,\n      title: '',\n      onClick: e => {\n        // Prevent label behavior in tooltip icon\n        // https://github.com/ant-design/ant-design/issues/46154\n        e.preventDefault();\n      },\n      tabIndex: null\n    }));\n    labelChildren = /*#__PURE__*/React.createElement(React.Fragment, null, labelChildren, tooltipNode);\n  }\n  // Required Mark\n  const isOptionalMark = requiredMark === 'optional';\n  const isRenderMark = typeof requiredMark === 'function';\n  if (isRenderMark) {\n    labelChildren = requiredMark(labelChildren, {\n      required: !!required\n    });\n  } else if (isOptionalMark && !required) {\n    labelChildren = /*#__PURE__*/React.createElement(React.Fragment, null, labelChildren, /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-item-optional`,\n      title: \"\"\n    }, (formLocale === null || formLocale === void 0 ? void 0 : formLocale.optional) || ((_a = defaultLocale.Form) === null || _a === void 0 ? void 0 : _a.optional)));\n  }\n  const labelClassName = classNames({\n    [`${prefixCls}-item-required`]: required,\n    [`${prefixCls}-item-required-mark-optional`]: isOptionalMark || isRenderMark,\n    [`${prefixCls}-item-no-colon`]: !computedColon\n  });\n  return /*#__PURE__*/React.createElement(Col, Object.assign({}, mergedLabelCol, {\n    className: labelColClassName\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: htmlFor,\n    className: labelClassName,\n    title: typeof label === 'string' ? label : ''\n  }, labelChildren));\n};\nexport default FormItemLabel;","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","QuestionCircleOutlined","classNames","Col","useLocale","defaultLocale","Tooltip","FormContext","toTooltipProps","tooltip","isValidElement","title","FormItemLabel","_ref","prefixCls","label","htmlFor","labelCol","labelAlign","colon","required","requiredMark","vertical","_a","formLocale","contextLabelAlign","contextLabelCol","labelWrap","contextColon","useContext","mergedLabelCol","mergedLabelAlign","labelClsBasic","labelColClassName","className","labelChildren","computedColon","haveColon","trim","replace","tooltipProps","icon","createElement","restTooltipProps","tooltipNode","assign","cloneElement","onClick","preventDefault","tabIndex","Fragment","isOptionalMark","isRenderMark","optional","Form","labelClassName"],"sources":["D:/Final/frontend/node_modules/antd/es/form/FormItemLabel.js"],"sourcesContent":["\"use client\";\r\n\r\nvar __rest = this && this.__rest || function (s, e) {\r\n  var t = {};\r\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\r\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\r\n  }\r\n  return t;\r\n};\r\nimport * as React from 'react';\r\nimport QuestionCircleOutlined from \"@ant-design/icons/es/icons/QuestionCircleOutlined\";\r\nimport classNames from 'classnames';\r\nimport Col from '../grid/col';\r\nimport { useLocale } from '../locale';\r\nimport defaultLocale from '../locale/en_US';\r\nimport Tooltip from '../tooltip';\r\nimport { FormContext } from './context';\r\nfunction toTooltipProps(tooltip) {\r\n  if (!tooltip) {\r\n    return null;\r\n  }\r\n  if (typeof tooltip === 'object' && ! /*#__PURE__*/React.isValidElement(tooltip)) {\r\n    return tooltip;\r\n  }\r\n  return {\r\n    title: tooltip\r\n  };\r\n}\r\nconst FormItemLabel = _ref => {\r\n  let {\r\n    prefixCls,\r\n    label,\r\n    htmlFor,\r\n    labelCol,\r\n    labelAlign,\r\n    colon,\r\n    required,\r\n    requiredMark,\r\n    tooltip,\r\n    vertical\r\n  } = _ref;\r\n  var _a;\r\n  const [formLocale] = useLocale('Form');\r\n  const {\r\n    labelAlign: contextLabelAlign,\r\n    labelCol: contextLabelCol,\r\n    labelWrap,\r\n    colon: contextColon\r\n  } = React.useContext(FormContext);\r\n  if (!label) {\r\n    return null;\r\n  }\r\n  const mergedLabelCol = labelCol || contextLabelCol || {};\r\n  const mergedLabelAlign = labelAlign || contextLabelAlign;\r\n  const labelClsBasic = `${prefixCls}-item-label`;\r\n  const labelColClassName = classNames(labelClsBasic, mergedLabelAlign === 'left' && `${labelClsBasic}-left`, mergedLabelCol.className, {\r\n    [`${labelClsBasic}-wrap`]: !!labelWrap\r\n  });\r\n  let labelChildren = label;\r\n  // Keep label is original where there should have no colon\r\n  const computedColon = colon === true || contextColon !== false && colon !== false;\r\n  const haveColon = computedColon && !vertical;\r\n  // Remove duplicated user input colon\r\n  if (haveColon && typeof label === 'string' && label.trim()) {\r\n    labelChildren = label.replace(/[:|：]\\s*$/, '');\r\n  }\r\n  // Tooltip\r\n  const tooltipProps = toTooltipProps(tooltip);\r\n  if (tooltipProps) {\r\n    const {\r\n        icon = /*#__PURE__*/React.createElement(QuestionCircleOutlined, null)\r\n      } = tooltipProps,\r\n      restTooltipProps = __rest(tooltipProps, [\"icon\"]);\r\n    const tooltipNode = /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, restTooltipProps), /*#__PURE__*/React.cloneElement(icon, {\r\n      className: `${prefixCls}-item-tooltip`,\r\n      title: '',\r\n      onClick: e => {\r\n        // Prevent label behavior in tooltip icon\r\n        // https://github.com/ant-design/ant-design/issues/46154\r\n        e.preventDefault();\r\n      },\r\n      tabIndex: null\r\n    }));\r\n    labelChildren = /*#__PURE__*/React.createElement(React.Fragment, null, labelChildren, tooltipNode);\r\n  }\r\n  // Required Mark\r\n  const isOptionalMark = requiredMark === 'optional';\r\n  const isRenderMark = typeof requiredMark === 'function';\r\n  if (isRenderMark) {\r\n    labelChildren = requiredMark(labelChildren, {\r\n      required: !!required\r\n    });\r\n  } else if (isOptionalMark && !required) {\r\n    labelChildren = /*#__PURE__*/React.createElement(React.Fragment, null, labelChildren, /*#__PURE__*/React.createElement(\"span\", {\r\n      className: `${prefixCls}-item-optional`,\r\n      title: \"\"\r\n    }, (formLocale === null || formLocale === void 0 ? void 0 : formLocale.optional) || ((_a = defaultLocale.Form) === null || _a === void 0 ? void 0 : _a.optional)));\r\n  }\r\n  const labelClassName = classNames({\r\n    [`${prefixCls}-item-required`]: required,\r\n    [`${prefixCls}-item-required-mark-optional`]: isOptionalMark || isRenderMark,\r\n    [`${prefixCls}-item-no-colon`]: !computedColon\r\n  });\r\n  return /*#__PURE__*/React.createElement(Col, Object.assign({}, mergedLabelCol, {\r\n    className: labelColClassName\r\n  }), /*#__PURE__*/React.createElement(\"label\", {\r\n    htmlFor: htmlFor,\r\n    className: labelClassName,\r\n    title: typeof label === 'string' ? label : ''\r\n  }, labelChildren));\r\n};\r\nexport default FormItemLabel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}