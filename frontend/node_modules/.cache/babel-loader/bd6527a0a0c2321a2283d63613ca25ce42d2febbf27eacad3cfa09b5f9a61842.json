{"ast":null,"code":"var _jsxFileName = \"/Users/chanapapupiam/Documents/Project/my-app/frontend/src/pages/create_sheet/Generate.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../../css/createExamsheet.css\";\nimport { Card, Pagination } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Generate = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 1; // แสดงภาพละ 1 รายการต่อหน้า\n\n  useEffect(() => {\n    // ดึงข้อมูลภาพจาก API\n    const fetchImages = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/get_images\");\n        const data = await response.json();\n        if (data.status === \"success\") {\n          setImages(data.images);\n        }\n      } catch (error) {\n        console.error(\"Error fetching images:\", error);\n      }\n    };\n    fetchImages();\n  }, []);\n\n  // คำนวณ index ของภาพที่จะเริ่มแสดง\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const selectedImages = images.slice(startIndex, startIndex + itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Title\",\n      children: \"Generate Examsheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"card-edit\",\n      style: {\n        width: \"100%\",\n        minHeight: 600,\n        margin: \"0 auto\",\n        height: \"auto\"\n      },\n      children: [selectedImages.map((imgSrc, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/png;base64,${imgSrc}`,\n          alt: `Generated ${startIndex + index}`,\n          style: {\n            width: \"50%\",\n            height: \"auto\",\n            display: \"block\",\n            margin: \"0 auto\",\n            border: \"1px solid #ccc\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n        current: currentPage,\n        total: images.length,\n        pageSize: itemsPerPage,\n        onChange: page => setCurrentPage(page),\n        style: {\n          textAlign: \"center\",\n          marginTop: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Generate, \"ys4tL19Ga/2o1kqMc3zCKj1YLMo=\");\n_c = Generate;\nexport default Generate;\nvar _c;\n$RefreshReg$(_c, \"Generate\");","map":{"version":3,"names":["React","useState","useEffect","Card","Pagination","jsxDEV","_jsxDEV","Generate","_s","images","setImages","currentPage","setCurrentPage","itemsPerPage","fetchImages","response","fetch","data","json","status","error","console","startIndex","selectedImages","slice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","width","minHeight","margin","height","map","imgSrc","index","textAlign","src","alt","display","border","current","total","length","pageSize","onChange","page","marginTop","_c","$RefreshReg$"],"sources":["/Users/chanapapupiam/Documents/Project/my-app/frontend/src/pages/create_sheet/Generate.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../../css/createExamsheet.css\";\nimport { Card, Pagination } from \"antd\";\n\nconst Generate = () => {\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 1; // แสดงภาพละ 1 รายการต่อหน้า\n\n  useEffect(() => {\n    // ดึงข้อมูลภาพจาก API\n    const fetchImages = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/get_images\");\n        const data = await response.json();\n        if (data.status === \"success\") {\n          setImages(data.images);\n        }\n      } catch (error) {\n        console.error(\"Error fetching images:\", error);\n      }\n    };\n    fetchImages();\n  }, []);\n\n  // คำนวณ index ของภาพที่จะเริ่มแสดง\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const selectedImages = images.slice(startIndex, startIndex + itemsPerPage);\n\n  return (\n    <div>\n      <h1 className=\"Title\">Generate Examsheet</h1>\n      <Card\n        className=\"card-edit\"\n        style={{\n          width: \"100%\",\n          minHeight: 600,\n          margin: \"0 auto\",\n          height: \"auto\",\n        }}\n      >\n        {selectedImages.map((imgSrc, index) => (\n          <div key={index} style={{ textAlign: \"center\" }}>\n            <img\n              src={`data:image/png;base64,${imgSrc}`}\n              alt={`Generated ${startIndex + index}`}\n              style={{\n                width: \"50%\",\n                height: \"auto\",\n                display: \"block\",\n                margin: \"0 auto\",\n                border: \"1px solid #ccc\",\n              }}\n            />\n          </div>\n        ))}\n        <Pagination\n          current={currentPage}\n          total={images.length}\n          pageSize={itemsPerPage}\n          onChange={(page) => setCurrentPage(page)}\n          style={{ textAlign: \"center\", marginTop: \"20px\" }}\n        />\n      </Card>\n    </div>\n  );\n};\n\nexport default Generate;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}